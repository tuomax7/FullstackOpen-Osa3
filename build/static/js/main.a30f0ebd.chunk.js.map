{"version":3,"sources":["services/persons.js","components/displayList.js","components/notification.js","components/addPerson.js","components/filter.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","deletePerson","name","number","onClick","DisplayList","personsToShow","map","Notification","message","messageString","className","style","color","success","AddPerson","submitPerson","newName","changedName","newNumber","changedNum","onSubmit","value","onChange","type","Filter","newFilter","changedFilter","setNewFilter","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","useEffect","personService","initialPersons","handleMessage","setTimeout","filter","toLowerCase","includes","event","target","preventDefault","newPerson","find","window","confirm","p","changedPerson","returnedPerson","candidate","catch","error","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a30f0ebd.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then(response => response.data);\n}\n\nconst deleteObject = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\treturn request.then(response => response.data);\n}\n\nexport default {getAll, create, update, deleteObject}","import React from 'react'\n\nconst DisplayList = ({personsToShow, deletePerson}) => {\n  return(\n    <div>\n      <h2>Numbers</h2>\n      {personsToShow.map(person => <Person key={person.id} person={person} deletePerson={deletePerson}/> ) }\n    </div>\n  )\n}\n\nconst Person = ({person, deletePerson}) => {\n\treturn(\n\t\t<div>\n\t\t\t{person.name} {person.number} <button onClick={() => deletePerson(person)}>Delete</button>\n\t\t</div>\n\t)\n}\n\nexport default DisplayList","import React from 'react'\n\nconst Notification = ({message}) => {\n\n\tif(message.messageString !== null){\n\t\treturn(\n\t\t\t<div className='notification' style={{color: message.success ? 'green' : 'red'}}>\n\t\t\t\t{message.messageString}\n\t\t\t</div>\n\t\t)\n\t}else{\n\t\treturn(\n\t\t\t<div></div>\n\t\t)\n\t}\n\n}\n\nexport default Notification","import React from 'react'\n\nconst AddPerson = ({submitPerson, newName, changedName, newNumber, changedNum}) => {\n  return(\n    <form onSubmit={submitPerson}>\n        <div>Name: <input value={newName} onChange={changedName}/></div>\n        <div>Number: <input value={newNumber} onChange={changedNum}/></div>\n        <div><button type=\"submit\">Add</button></div>\n    </form>\n  )\n}\n\nexport default AddPerson","import React from 'react'\n\nconst Filter = ({newFilter, setNewFilter, changedFilter}) => {\n   return (\n    <div>\n     Filter shown with <input value={newFilter} onChange={changedFilter}/>\n    </div>\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\nimport DisplayList from './components/displayList'\nimport Notification from './components/notification'\nimport AddPerson from './components/addPerson.js'\nimport Filter from './components/filter'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const [ newFilter, setNewFilter ] = useState('')\n\n  const [message, setMessage] = useState({messageString: null, success: null});\n\n  useEffect(() => {\n  \tpersonService\n  \t\t.getAll()\n  \t\t.then(initialPersons => {\n  \t\t\tsetPersons(initialPersons)\n  \t\t})\n  }, [])\n\n  const changedFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const changedName = (event) => {\n      setNewName(event.target.value);\n  }\n\n  const changedNum = (event) => {\n      setNewNumber(event.target.value);\n  }\n\n  const submitPerson = (event) => {\n      event.preventDefault();\n\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      if(persons.find(person => person.name === newPerson.name)){\n        if(window.confirm(`${newPerson.name} is already added to phonebook, change their number?`)){\n        \t\n        \tconst person = persons.find(p => p.name === newPerson.name)\n        \tconst changedPerson = {...person, number: newNumber};\n\n        \tpersonService\n        \t\t.update(person.id, changedPerson)\n        \t\t.then(returnedPerson => {\n        \t\t\tsetPersons(persons.map(candidate => candidate.id !== person.id ? candidate : returnedPerson));\n        \t\t\thandleMessage(`Changed the number of '${returnedPerson.name}'.`, true)\n        \t})\n        \t.catch(error => {\n        \t\tsetPersons(persons.filter(candidate => candidate.id !== person.id));\n        \t\thandleMessage(`'${person.name}' was already removed from the server.`, false);\n        \t})\n\n        \tsetNewName('');\n      \t\tsetNewNumber('');\n        }\n      }else{\n      \tpersonService\n      \t\t.create(newPerson)\n      \t\t.then(returnedPerson => {\n      \t\t\tsetPersons(persons.concat(returnedPerson));\n      \t\t\thandleMessage(`Added '${returnedPerson.name}'.`, true)\n      \t\t\tsetNewName('');\n      \t\t\tsetNewNumber('');\n      \t\t})\n      }\n  }\n\n  const handleMessage = (message, success) => {\n\n  \tsetMessage({messageString: message, success: success});\n\n  \tsetTimeout(() => {\n      \tsetMessage({messageString: null, success: null});\n     }, 3000);\n  }\n\n  const deletePerson = (person) => {\n  \tif(window.confirm(`Delete ${person.name} from phonebook?`)){\n\n  \t\tpersonService\n  \t\t.deleteObject(person.id)\n  \t\t.then(initialPersons => {\n  \t\t\tsetPersons(persons.filter(candidate => candidate.id !== person.id));\n  \t\t\thandleMessage(`Deleted '${person.name}'.`, true)\n  \t\t})\n  \t}\n  }\n\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} changedFilter={changedFilter} />\n      <AddPerson submitPerson={submitPerson} newName={newName} changedName={changedName} newNumber={newNumber} changedNum={changedNum} />\n      <DisplayList personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}